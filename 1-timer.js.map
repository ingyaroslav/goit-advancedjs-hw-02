{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["'use strict';\n\nimport flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\nimport svgUrlX from '../img/x.svg';\n\nconst dateTime = document.querySelector('input#datetime-picker');\nconst startButton = document.querySelector('button[data-start]');\n\nstartButton.disabled = true;\n\nlet userSelectedDate;\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconst timer = {\n  activeTimerID: null,\n\n  timerElements: {\n    days: document.querySelector('.value[data-days]'),\n    hours: document.querySelector('.value[data-hours]'),\n    minutes: document.querySelector('.value[data-minutes]'),\n    seconds: document.querySelector('.value[data-seconds]'),\n  },\n\n  start() {\n    startButton.disabled = true;\n    dateTime.disabled = true;\n    this.activeTimerID = setInterval(() => {\n      const rawDiff = userSelectedDate.getTime() - Date.now();\n      if (rawDiff <= 0) {\n        this.stop();\n        dateTime.disabled = false;\n      } else {\n        const finishDiff = convertMs(rawDiff);\n        for (const key in this.timerElements) {\n          this.timerElements[key].textContent = String(\n            finishDiff[key]\n          ).padStart(2, '0');\n        }\n      }\n    }, 1000);\n  },\n\n  stop() {\n    clearInterval(this.activeTimerID);\n  },\n};\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < Date.now()) {\n      startButton.disabled = true;\n      iziToast.show({\n        message: 'Please choose a date in the future',\n        messageColor: '#ffffff',\n        color: '#EF4040',\n        position: 'topRight',\n        displayMode: 1,\n        iconUrl: `${svgUrlX}`,\n      });\n    } else {\n      startButton.disabled = false;\n      userSelectedDate = selectedDates[0];\n    }\n  },\n};\n\nflatpickr(dateTime, options);\n\nstartButton.addEventListener('click', evt => {\n  timer.start();\n});"],"names":["dateTime","startButton","userSelectedDate","convertMs","ms","days","hours","minutes","seconds","timer","rawDiff","finishDiff","key","options","selectedDates","iziToast","svgUrlX","flatpickr","evt"],"mappings":"sIAMA,MAAMA,EAAW,SAAS,cAAc,uBAAuB,EACzDC,EAAc,SAAS,cAAc,oBAAoB,EAE/DA,EAAY,SAAW,GAEvB,IAAIC,EAEJ,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,MAAMC,EAAQ,CACZ,cAAe,KAEf,cAAe,CACb,KAAM,SAAS,cAAc,mBAAmB,EAChD,MAAO,SAAS,cAAc,oBAAoB,EAClD,QAAS,SAAS,cAAc,sBAAsB,EACtD,QAAS,SAAS,cAAc,sBAAsB,CACvD,EAED,OAAQ,CACNR,EAAY,SAAW,GACvBD,EAAS,SAAW,GACpB,KAAK,cAAgB,YAAY,IAAM,CACrC,MAAMU,EAAUR,EAAiB,QAAS,EAAG,KAAK,IAAG,EACrD,GAAIQ,GAAW,EACb,KAAK,KAAI,EACTV,EAAS,SAAW,OACf,CACL,MAAMW,EAAaR,EAAUO,CAAO,EACpC,UAAWE,KAAO,KAAK,cACrB,KAAK,cAAcA,CAAG,EAAE,YAAc,OACpCD,EAAWC,CAAG,CAC1B,EAAY,SAAS,EAAG,GAAG,CAEpB,CACF,EAAE,GAAI,CACR,EAED,MAAO,CACL,cAAc,KAAK,aAAa,CACjC,CACH,EAEMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAI,KAAK,IAAG,GAC7Bb,EAAY,SAAW,GACvBc,EAAS,KAAK,CACZ,QAAS,qCACT,aAAc,UACd,MAAO,UACP,SAAU,WACV,YAAa,EACb,QAAS,GAAGC,CAAO,EAC3B,CAAO,IAEDf,EAAY,SAAW,GACvBC,EAAmBY,EAAc,CAAC,EAErC,CACH,EAEAG,EAAUjB,EAAUa,CAAO,EAE3BZ,EAAY,iBAAiB,QAASiB,GAAO,CAC3CT,EAAM,MAAK,CACb,CAAC"}