{"version":3,"file":"2-form.js","sources":["../src/js/2-form.js"],"sourcesContent":["'use strict';\nconst inputForm = document.querySelector('.feedback-form');\nconst localStorageKey = 'feedback-form-state';\n\nlet formData = {\n  email: '',\n  message: '',\n};\n\nlet cachedValue;\n\ntry {\n  cachedValue = JSON.parse(localStorage.getItem('feedback-form-state'));\n} catch (error) {\n  console.error('Error parsing cached value:', error);\n  cachedValue = null;\n}\n\nif (cachedValue) {\n  for (const key in cachedValue) {\n    inputForm.elements[key].value = cachedValue[key];\n    formData[key] = cachedValue[key];\n  }\n}\n\nconst fillLocalStorage = evt => {\n  formData[evt.target.name] = evt.target.value;\n  localStorage.setItem(localStorageKey, JSON.stringify(formData).trim());\n};\n\ninputForm.addEventListener('input', fillLocalStorage);\n\ninputForm.addEventListener('submit', evt => {\n  evt.preventDefault();\n  if (!inputForm.elements.email.value || !inputForm.elements.message.value) {\n    alert('Fill please all fields');\n  } else {\n    console.log(formData);\n    localStorage.removeItem(localStorageKey);\n    formData.email = '';\n    formData.message = '';\n    inputForm.reset();\n  }\n});"],"names":["inputForm","localStorageKey","formData","cachedValue","error","key","fillLocalStorage","evt"],"mappings":"wFACA,MAAMA,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAkB,sBAExB,IAAIC,EAAW,CACb,MAAO,GACP,QAAS,EACX,EAEIC,EAEJ,GAAI,CACFA,EAAc,KAAK,MAAM,aAAa,QAAQ,qBAAqB,CAAC,CACtE,OAASC,EAAO,CACd,QAAQ,MAAM,8BAA+BA,CAAK,EAClDD,EAAc,IAChB,CAEA,GAAIA,EACF,UAAWE,KAAOF,EAChBH,EAAU,SAASK,CAAG,EAAE,MAAQF,EAAYE,CAAG,EAC/CH,EAASG,CAAG,EAAIF,EAAYE,CAAG,EAInC,MAAMC,EAAmBC,GAAO,CAC9BL,EAASK,EAAI,OAAO,IAAI,EAAIA,EAAI,OAAO,MACvC,aAAa,QAAQN,EAAiB,KAAK,UAAUC,CAAQ,EAAE,KAAI,CAAE,CACvE,EAEAF,EAAU,iBAAiB,QAASM,CAAgB,EAEpDN,EAAU,iBAAiB,SAAUO,GAAO,CAC1CA,EAAI,eAAc,EACd,CAACP,EAAU,SAAS,MAAM,OAAS,CAACA,EAAU,SAAS,QAAQ,MACjE,MAAM,wBAAwB,GAE9B,QAAQ,IAAIE,CAAQ,EACpB,aAAa,WAAWD,CAAe,EACvCC,EAAS,MAAQ,GACjBA,EAAS,QAAU,GACnBF,EAAU,MAAK,EAEnB,CAAC"}